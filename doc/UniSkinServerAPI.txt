# UniSkinServer API Document
This file is not a part of `UniSkinAPI`

## Register: `/register`
    POST: LOGIN={username}&PASSWD={password}
    RETN: {"errno":0,"msg":"success"}
            1: already registered
            2: passwd not satisfied request(too short)
            3: invalid name or passwd

## Login: `/login`
    POST: same as register
    RETN: {"errno":0,"msg":"{sessionToken}"}
            1: invalid login
            2: attempt blocked

## Logout: `/logout`
    POST: token={}
    RETN: {"errno":0,"msg":"{sessionToken}"}

## Get Full User Data: `/userdata`
    GET  :token={sessionToken}
    RETN :Same as UniSkinAPI

## Delete Account: `/delete_account`
    POST: token={}
          current_passwd={}
          login={}
    RETN: {"errno":0,"msg":"success"}

## Change Password: `/chpwd`
    POST: token={}
          current_passwd={}
          new_passwd={}
          login={}
    RETN: {"errno":0,"msg":"success"}

## Set Skin Model preference: `/model_preference`
    POST: token={}
          prefered_model={slim|default}
    RETN: {"errno":0,"msg":"success"}

## Set Static/Dynamic preference: `/type_preference`
    POST: token={}
          type={skin|cape|elytra}
          preference={dynamic|static|off}
    RETN: {"errno":0,"msg":"success"}

## Set Dynamic Interval: `/dynamic_interval`
    POST: token={}
          type={skin|cape|elytra}
          interval={positive integer}
    RETN: {"errno":0,"msg":"success"}

## Upload Texture: `/upload_texture`
    POST: token={}
          model={slim|default|cape|elytra}
          type={static|dynamic}
          file={}
    RETN: {"errno":0,"msg":"success"}

## Delete Texture: `/delete_texture`
    POST: token={}
          model={slim|default|cape|elytra}
          type={static|dynamic}
    RETN: {"errno":0,"msg":"success"}

## `errno` definitions:
    0: success
    1: invalid credential
    2: bad password
    3: bad username
    4: attempt blocked
    5: already registered
    6: argument not acceptable
    7: register not allowed
    8: internal server error

# Database: `bsddb3`

    {
      "username": "{string}",
      "password": "{string}",
      "update_time": "{unix timestamp in ms}",
      "textures": {
        "skin_default_static": {string, hash},
        "skin_default_dynamic": {
          "interval": "{int, ms}",
          "hashes": ["{ordered list of string}"]
        },
        "skin_slim_static": {},
        "skin_slim_dynamic": {},
        "cape_static": {},
        "cape_dynamic": {},
        "elytra_static": {},
        "elytra_dynamic": {}
      },
      "type_preference": {
        "skin": "{string, static|dynamic|off}",
        "cape": "{string, static|dynamic|off}",
        "elytra": "{string, static|dynamic|off}",
      },
      "model_preference": {string,slim|default}
    }
